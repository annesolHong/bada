<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.bada.weathers.Service">
	
	<select id="weather_beachName" resultType="Integer">
	   select beach_code from BADA_LIST where beach like '%' || #{param1} || '%'
	</select>
	
	<select id="weather_beach_defaultInfo" resultType="com.ezen.bada.weathers.Bada_default_DTO">
	   select * from BADA_LIST where beach like '%' || #{param1} || '%'
	</select>
	
	<!-- 선택한 지역에 해당하는 바다 리스트를 뽑아옵니다. -->
	<select id="getbadalist" resultType="com.ezen.bada.weathers.Bada_default_DTO">
		select * from BADA_LIST where state = #{param1} order by beach
	</select>
	
	<select id="getbadalist2" resultType="com.ezen.bada.weathers.Bada_default_DTO">
		select * from BADA_LIST where state = #{param1} or state = #{param2} order by beach
	</select>
	
	<!-- 선택한 해변에 대한 설명 등등을 받아옵니다. -->
	<select id="getbeachinfo" resultType="com.ezen.bada.weathers.Bada_info_DTO">
		select * from bada_info where beach_code = #{param1}
	</select>
	
	<!-- 선택한 해변의 리스트 테이블 속 정보를 모두 받아오기 -->
	<select id="get_Beach_list_data" resultType="com.ezen.bada.weathers.Bada_default_DTO">
		select * from bada_list where beach_code = #{param1}
	</select>
	
	<!-- 경보 위치 검색 -->
	<select id="weatherWarning_search" resultType="java.lang.String">
		select address from bada_info where beach_code = #{param1} and address like '%' || #{param2} || '%'
	</select>
	
	<!-- 메인 검색, 검색어가 도명(state)인지 시군명(city)인지 / 양쪽에 다 존재할 경우 state로 반환-->
	<select id="searchwhere" resultType="String">
		SELECT 
		    CASE 
		        WHEN EXISTS (SELECT 1 FROM bada_info WHERE state = #{param1}) THEN 'state'
		        WHEN EXISTS (SELECT 1 FROM bada_info WHERE city = #{param1}) THEN 'city'
		        ELSE NULL -- 데이터가 존재하지 않는 경우 NULL 반환
		    END AS category
		FROM dual;
	</select>
	
	<!-- 검색어가 시군일 경우 해당 시군의 바다를 리스트화 -->
	<select id="getcitybeach" resultType="com.ezen.bada.weathers.Bada_info_DTO">
		select * from bada_info where city=#{param1}
	</select>
		
</mapper>