<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.bada.ranking.Service">

	<select id="viewTopThree" resultType="com.ezen.bada.ranking.RankingBeachDTO">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT bl.beach_code, bl.beach, bl.view_count AS count, bi.picture1 as picture,
		           RANK() OVER (ORDER BY bl.view_count DESC) AS rank
		    FROM bada_list bl
		    JOIN bada_info bi ON bl.beach_code = bi.beach_code
		)
		WHERE ROWNUM <= 3
	]]>
	</select>
	
	<select id="reviewTopThree" resultType="com.ezen.bada.ranking.RankingBeachDTO">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT bl.beach_code, bl.beach, COUNT(*) as count, bi.picture1 as picture,
		           RANK() OVER (ORDER BY COUNT(*) DESC) AS rank
		    FROM bada_user_review bu
		    JOIN bada_list bl ON bu.beach_code = bl.beach_code
		    JOIN bada_info bi ON bu.beach_code = bi.beach_code
		    GROUP BY bl.beach_code, bl.beach, bi.picture1
		)
		WHERE ROWNUM <= 3
	]]>
	</select>
	
	<select id="reviewScoreTopThree" resultType="com.ezen.bada.ranking.RankingBeachDTO">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT bl.beach_code, bl.beach, AVG(bu.REVIEW_SCORE) AS avg_score, COUNT(bu.REVIEW_SCORE) AS review_count, bi.picture1 as picture,
		        RANK() OVER (ORDER BY AVG(bu.REVIEW_SCORE) DESC) AS rank
		    FROM bada_user_review bu
		    JOIN bada_list bl ON bu.beach_code = bl.beach_code
		    JOIN bada_info bi ON bu.beach_code = bi.beach_code
		    GROUP BY bl.beach_code, bl.beach, bi.picture1
		)
		WHERE review_count >= 2 AND ROWNUM <= 3
	]]>
	</select>
	
	<select id="re_visitTopThree" resultType="com.ezen.bada.ranking.RankingBeachDTO">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT 
		        bu.beach_code, 
		        bl.beach, 
		        SUM(CASE WHEN bu.re_visit = 'Yes' THEN 1 ELSE 0 END) AS count,
		        bi.picture1 as picture,
		        RANK() OVER (ORDER BY SUM(CASE WHEN bu.re_visit = 'Yes' THEN 1 ELSE 0 END) DESC) AS rank
		    FROM bada_user_review bu
		    JOIN bada_list bl ON bu.beach_code = bl.beach_code
		    JOIN bada_info bi ON bu.beach_code = bi.beach_code
		    GROUP BY bu.beach_code, bl.beach, bi.picture1
		)
		WHERE ROWNUM <= 3

	]]>
	</select>
	
	<select id="bbtiTopThree" resultType="com.ezen.bada.ranking.RankingBBTIDTO">
	<![CDATA[
		SELECT
		    *
		FROM
		(SELECT
		    bb.bbti_name as bbti,
		    bu.bbti as bbti_code,
		    COUNT(*) as count,
		    rank() OVER (ORDER BY  COUNT(*) DESC) as rank
		FROM bada_user bu
		JOIN BADA_BBTI bb on bu.bbti = bb.bbti_code
		WHERE
		    bbti IS NOT NULL
		GROUP BY bu.bbti, bb.bbti_name)
		WHERE ROWNUM <= 3
	]]>
	</select>
	
	<select id="hashtagTopThree" parameterType="string" resultType="com.ezen.bada.ranking.RankingHashtagDTO">
	<![CDATA[
       WITH ranked_beaches AS (
	    SELECT
	        hashtag,
	        beach,
	        beach_code,
	        picture1,
	        hashtag_count,
	        ROW_NUMBER() OVER (PARTITION BY hashtag ORDER BY hashtag_count DESC) AS rank_num
	    FROM (
	        SELECT
	            regexp_substr(r.hashtag, '[^ ]+', 1, column_value) AS hashtag,
	            bl.beach,
	            bl.beach_code,
	            bi.picture1,
	            COUNT(*) AS hashtag_count
	        FROM
	            bada_user_review r
	            INNER JOIN bada_list bl ON r.beach_code = bl.beach_code
	            INNER JOIN bada_info bi ON r.beach_code = bi.beach_code
	            CROSS JOIN TABLE(CAST(MULTISET(SELECT LEVEL FROM DUAL CONNECT BY LEVEL <= REGEXP_COUNT(r.hashtag, ' ') + 1) AS SYS.ODCINUMBERLIST))
	        WHERE
	            regexp_substr(r.hashtag, '[^ ]+', 1, column_value) = #{param1}
	        GROUP BY
	            regexp_substr(r.hashtag, '[^ ]+', 1, column_value),
	            bl.beach,
	            bl.beach_code,
	            bi.picture1
	    )
	)
	SELECT
	    hashtag,
	    MAX(CASE WHEN rank_num = 1 THEN beach END) AS most_used_beach,
	    MAX(CASE WHEN rank_num = 1 THEN beach_code END) AS most_used_beach_code,
	    MAX(CASE WHEN rank_num = 1 THEN picture1 END) AS most_used_beach_picture,
	    MAX(CASE WHEN rank_num = 1 THEN hashtag_count END) AS max_hashtag_count,
	    MAX(CASE WHEN rank_num = 2 THEN beach END) AS second_used_beach,
	    MAX(CASE WHEN rank_num = 2 THEN beach_code END) AS second_used_beach_code,
	    MAX(CASE WHEN rank_num = 2 THEN picture1 END) AS second_used_beach_picture,
	    MAX(CASE WHEN rank_num = 2 THEN hashtag_count END) AS second_hashtag_count,
	    MAX(CASE WHEN rank_num = 3 THEN beach END) AS third_used_beach,
	    MAX(CASE WHEN rank_num = 3 THEN beach_code END) AS third_used_beach_code,
	    MAX(CASE WHEN rank_num = 3 THEN picture1 END) AS third_used_beach_picture,
	    MAX(CASE WHEN rank_num = 3 THEN hashtag_count END) AS third_hashtag_count
	FROM
	    ranked_beaches
	GROUP BY
	    hashtag
	ORDER BY
	    hashtag
	]]>
	</select>

</mapper>