<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.bada.inquire.Service">

<!-- 문의글 입력하기 전 사전정보 -->
<select id="input_info" resultType="com.ezen.bada.member.MemberDTO">
	select id, name from bada_user where id=#{param1}
</select>

<!-- 문의글 저장 -->
<insert id="inquire_save">
	insert into bada_inquire (inquire_num, title, category, name, id, pic1, pic2, pic3, pic4, pic5, content, secret, secret_pw) 
	values (inquire_seq.nextval, #{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6}, #{param7}, #{param8}, 
	 #{param9}, #{param10}, #{param11}, #{param12})
</insert>

<!-- 문의 글 출력: 페이징처리에서 전체레코드수 구하기 -->
<select id="inquire_list_total" resultType="int">
	select count(*)from bada_inquire
</select>

<!-- 문의 글 출력: 한 페이지 안에 들어갈 만큼의 리스트 목록을 잘라오기 -->
<select id="page_inquire_listout" resultType="com.ezen.bada.inquire.InquireDTO">
	select * from( select rownum rn, A.* from(
		select inquire_num, title, category, name, id, i_date, 
		pic1, pic2, pic3, pic4, pic5, content, secret, secret_pw, reply, rec, cnt 
		from bada_inquire
		order by inquire_num DESC) A) 
	where rn between #{start} AND #{end}
</select>


<!-- 문의 글 검색 -->
<select resultType="com.ezen.bada.inquire.InquireDTO" id="inquire_search_out1">
	select inquire_num, title, category, name, id, i_date, secret, secret_pw, reply, rec, cnt 
	from bada_inquire where 
	${param1} like '%' || #{param2} || '%' 
	order by inquire_num DESC
</select>

<select resultType="com.ezen.bada.inquire.InquireDTO" id="inquire_search_out2">
	select inquire_num, title, category, name, id, i_date, secret, secret_pw, reply, rec, cnt
	from bada_inquire
	where ${param1} like '%' || #{param2} || '%' and trunc(i_date) = to_date(#{param4}, 'YYYY-MM-DD') 
	order by inquire_num DESC 
</select>

<select resultType="com.ezen.bada.inquire.InquireDTO" id="inquire_search_out3">
	select inquire_num, title, category, name, id, i_date, secret, secret_pw, reply, rec, cnt 
	from bada_inquire
	where ${param1} like '%' || #{param2} || '%' and category like '%' || #{param3} || '%' 
	order by inquire_num DESC
</select>

<select resultType="com.ezen.bada.inquire.InquireDTO" id="inquire_search_out4">
	select inquire_num, title, category, name, id, i_date, secret, secret_pw, reply, rec, cnt 
	from bada_inquire
	where ${param1} like '%' || #{param2} || '%' and
	category like '%' || #{param3} || '%' and trunc(i_date) = to_date(#{param4}, 'YYYY-MM-DD') 
	order by inquire_num DESC 
</select>
<!-- 문의글 검색 끝 -->


<!-- 문의글 디테일 -->
<select resultType="com.ezen.bada.inquire.InquireDTO" id="inquire_detail">
	select * from bada_inquire where inquire_num=#{param1}
</select>

<!-- 문의글 조회수 증가 -->
<update id="inquire_updatecnt">
	update bada_inquire set cnt=cnt+1 where inquire_num=#{param1}
</update>

<!-- 문의글 추천 중복 체크 -->
<select resultType="int" id="inquire_rec_id">
	select count (rec_id) from bada_inquire
	where inquire_num=#{param1} and rec_id like '%' || #{param2} || '%'
</select>

<!-- 문의글 추천 기능 -->
<update id="inquire_recommand">
	update bada_inquire set rec = rec + 1, rec_id = rec_id || ',' || #{param1}
	where inquire_num = #{param2}
</update>


<!-- 문의글 신고 중복 체크 -->
<select id="inquire_ban_check" resultType="java.lang.String">
	select title 
	from bada_i_banned 
	where id=#{param1} and BAN_INQUIRE_NUM=#{param2} and category=#{param3} and content=#{param4}
</select>

<!-- 문의글 신고 저장 -->
<insert id="inquire_ban_save">
	insert into bada_i_banned (i_banned_num, title, name, id, ban_inquire_num, ban_name, ban_id, category, content) 
	values (i_banned_seq.nextval, #{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6}, #{param7}, #{param8})
</insert>


<!-- 답변 저장 -->
<insert id="inquire_reply_save">
	insert into bada_inquire_reply (inquire_reply_num, content, inquire_num) 
	values (#{param1}||i_r_seq.nextval, #{param2}, #{param3})
</insert>

<!-- 게시글에 맞는 답변 출력 -->
<select resultType="com.ezen.bada.inquire.Inquire_reply_DTO" id="inquire_reply_out">
	select * from bada_inquire_reply where inquire_num=#{param1}
</select>

<!-- 답변 갯수가 몇 개인지 세어 봄 -->
<select id="inquire_reply_count" resultType="int">
	select count(*) from bada_inquire_reply where inquire_num=#{param1}
</select>

<!-- 답변이 1개 이상일 시 '미응답'이 '응답'으로 바뀌도록 함 -->
<update id="inquire_reply_check">
	update bada_inquire set reply = 1 where inquire_num = #{param1}
</update>


<!-- 문의글 삭제 시 함께 삭제할 이미지 파일 -->
<select id="all_photo" resultType="com.ezen.bada.inquire.InquireDTO">
    select pic1, pic2, pic3, pic4, pic5
    from bada_inquire
    where inquire_num = #{param1}
</select>

 <!-- 문의글 삭제 -->
<delete id="inquire_delete">
	delete from bada_inquire where inquire_num = #{param1}
</delete>
<!-- 문의글을 삭제했을 때 거기에 달린 답도 함께 삭제되도록 함 -->
<delete id="inquire_reply_delete_when_inquire_delete">
	delete from bada_inquire_reply where inquire_num = #{param1}
</delete>

 <!-- 문의글 수정 화면 -->
<select id="inquire_modify_view" resultType="com.ezen.bada.inquire.InquireDTO">
	select * from bada_inquire where inquire_num = #{param1}
</select>

<!-- 문의글 수정사항 정보 저장 -->
<update id="inquire_modify_save">
	update bada_inquire set
		title=#{param1},
		category=#{param2},
		content=#{param3},
		secret=#{param4},
		secret_pw=#{param5}
	where inquire_num=#{param6}
</update>

<!-- 문의글 수정사항 이미지 파일 저장 -->
<update id="update_photo" parameterType="map">
    update bada_inquire set
    	pic1 = #{change_photo[0]}, 
        pic2 = #{change_photo[1]}, 
        pic3 = #{change_photo[2]}, 
        pic4 = #{change_photo[3]}, 
        pic5 = #{change_photo[4]}
    where inquire_num = #{inquire_num}
</update>


 <!-- 문의글 답변 삭제 -->
<delete id="inquire_reply_delete">
	delete from bada_inquire_reply where inquire_reply_num = #{param1}
</delete>


<update id="inquire_reply_modify">
	update bada_inquire_reply set
		content=#{param1}
	where inquire_reply_num=#{param2}
</update>

</mapper>